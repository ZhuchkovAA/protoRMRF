syntax = "proto3";

package permission;

option go_package = "apfish.v1;apfishv1";

import "google/protobuf/timestamp.proto";  // Standard Protocol Buffers timestamp

import "apfish/permission/action.proto";
import "apfish/permission/object.proto";

import "apfish/location/country.proto";
import "apfish/location/district.proto";
import "apfish/location/port.proto";

import "apfish/user/user.proto";
import "apfish/user/role.proto";

service PermissionService {
  rpc GetPermission (PermissionRequest) returns (PermissionResponse);
}

message PermissionRequest {
  int64 id = 1;
}

message PermissionResponse {
  int64 id = 1;
}

// Defines an access permission in the system.
// Permissions combine an Action and Object to create granular access controls (e.g., "read:inspection").
message Permission {
  int64 id = 1;                   // Unique identifier for the permission
  Action action = 2;     // The operation this permission allows (e.g., "read", "create")
  Object object = 3;     // The resource this permission applies to (e.g., "inspection", "user")
  string description = 4;          // Human-readable explanation of the permission
  string name = 5;                // Display name (e.g., "Read Inspections")
  string code = 6;                // Machine-readable identifier (e.g., "inspection:read")
  google.protobuf.Timestamp created_at = 7;

  repeated location.Country countries= 8;
  repeated location.District districts = 9;
  repeated location.Port ports = 10;

  repeated user.User users = 11;
  repeated user.Role roles = 12;
}

message PermissionSummary {
  int64 id = 1;
  ActionSummary action_summary = 2;
  ObjectSummary object_summary = 3;
  string name = 4;

  repeated location.CountrySummary countries = 5;
  repeated location.DistrictSummary districts = 6;
  repeated location.PortSummary ports = 7;
}