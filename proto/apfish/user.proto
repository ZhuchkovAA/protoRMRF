syntax = "proto3";

package user;

option go_package = "apfish.v1;apfishv1";

import "google/protobuf/timestamp.proto";  // Standard Protocol Buffers timestamp

// UserService defines RPC methods for user management.
service UserService {
  // GetUser retrieves a single user by their unique login.
  // Returns NOT_FOUND if the user does not exist.
  rpc GetUser (UserRequest) returns (UserResponse);

  // ListUsers searches for users by login prefix (case-insensitive)
  // and returns paginated results.
  rpc ListUsers (ListUsersRequest) returns (ListUsersResponse);
}

// Request to fetch a specific user.
message UserRequest {
  string login = 1;  // Exact login identifier (e.g., "john.doe").
}

// Response containing the requested user.
message UserResponse {
  User user = 1;  // Full user profile data.
}

// Paginated request for user search.
message ListUsersRequest {
  string login = 1;    // Optional login prefix filter (e.g., "joh").
  int64 page = 2;      // Page number (1-based). Default: 1.
  int64 per_page = 3;  // Items per page (default: 20, max: 100).
}

// Paginated user list response.
message ListUsersResponse {
  repeated User users = 1;  // Users matching the query (max `per_page` entries).
  int32 total = 2;         // Total matching users (ignoring pagination).
}

// Represents a user account in the system.
message User {
  int64 id = 1;                       // Unique system-generated ID.
  string login = 2;                   // Unique login identifier.
  string official_name = 3;           // Formal name (e.g., "John Doe").
  google.protobuf.Timestamp created_at = 5;  // When the user was created.
  string created_by_login = 6;        // Login of the creator (e.g., "admin").

  Role role = 7;                      // Assigned role.
  repeated Permission permissions = 8;  // Direct permissions (overrides role).
  repeated UserContact contacts = 9;   // User's contact methods.
}

// Defines a user role (e.g., "Admin", "Editor").
message Role {
  int64 id = 1;                       // Unique role ID.
  string name = 2;                    // Human-readable name (e.g., "Admin").
  string code = 3;                    // Machine-friendly code (e.g., "admin").
  google.protobuf.Timestamp created_at = 4;  // When the role was created.
  repeated Permission permissions = 5;  // Permissions granted by this role.
}

// A user's contact method (e.g., email, phone).
message UserContact {
  int64 id = 1;                       // Unique contact ID.
  UserContactType type = 2;           // Contact type.
  string value = 3;                   // Contact value (e.g., "user@example.com").
  google.protobuf.Timestamp created_at = 4;  // When the contact was added.
}

// Type of contact method (e.g., "Email", "Phone").
message UserContactType {
  int64 id = 1;                       // Unique type ID.
  string name = 2;                    // Human-readable name (e.g., "Email").
  string code = 3;                    // Machine-friendly code (e.g., "email").
  google.protobuf.Timestamp created_at = 4;  // When the type was defined.
}

// Defines an access permission in the system.
// Permissions combine an Action and Object to create granular access controls (e.g., "read:inspection").
message Permission {
  int64 id = 1;                   // Unique identifier for the permission
  PermissionAction action = 2;     // The operation this permission allows (e.g., "read", "create")
  PermissionObject object = 3;     // The resource this permission applies to (e.g., "inspection", "user")
  string description = 4;          // Human-readable explanation of the permission
  string name = 5;                // Display name (e.g., "Read Inspections")
  string code = 6;                // Machine-readable identifier (e.g., "inspection:read")
  google.protobuf.Timestamp created_at = 7;

  repeated CountryPermission countries= 8;
  repeated DistrictPermission districts = 9;
  repeated PortPermission ports = 10;
}

// Defines an actionable operation that can be performed in the system.
message PermissionAction {
  int64 id = 1;                   // Unique identifier for the action
  string name = 2;                // Human-readable name (e.g., "Read")
  string description = 3;         // Detailed explanation of the action
  string code = 4;                // Machine-friendly code (e.g., "read")
}

// Defines a type of resource or object that can be accessed in the system.
message PermissionObject {
  int64 id = 1;                   // Unique identifier for the object type
  string name = 2;                // Human-readable name (e.g., "Inspection")
  string description = 3;         // Detailed explanation of the object type
  string code = 4;                // Machine-friendly code (e.g., "inspection")
}

message CountryPermission {
  int64 id = 1;
  string name = 2;
}

message DistrictPermission {
  int64 id = 1;
  string name = 2;
}

message PortPermission {
  int64 id = 1;
  string name = 2;
}