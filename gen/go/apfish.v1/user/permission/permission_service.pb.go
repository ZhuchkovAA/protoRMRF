// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: apfish.v1/user/permission/permission_service.proto

package user_permission

import (
	helper "github.com/ZhuchkovAA/protoRMRF/gen/go/apfish.v1/helper"
	summary "github.com/ZhuchkovAA/protoRMRF/gen/go/apfish.v1/permission/summary"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListUserPermissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserPermissionRequest) Reset() {
	*x = ListUserPermissionRequest{}
	mi := &file_apfish_v1_user_permission_permission_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserPermissionRequest) ProtoMessage() {}

func (x *ListUserPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_user_permission_permission_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserPermissionRequest.ProtoReflect.Descriptor instead.
func (*ListUserPermissionRequest) Descriptor() ([]byte, []int) {
	return file_apfish_v1_user_permission_permission_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListUserPermissionRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

type ListUserPermissionResponse struct {
	state           protoimpl.MessageState       `protogen:"open.v1"`
	UserPermissions []*summary.PermissionSummary `protobuf:"bytes,1,rep,name=user_permissions,json=userPermissions,proto3" json:"user_permissions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListUserPermissionResponse) Reset() {
	*x = ListUserPermissionResponse{}
	mi := &file_apfish_v1_user_permission_permission_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserPermissionResponse) ProtoMessage() {}

func (x *ListUserPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_user_permission_permission_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserPermissionResponse.ProtoReflect.Descriptor instead.
func (*ListUserPermissionResponse) Descriptor() ([]byte, []int) {
	return file_apfish_v1_user_permission_permission_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListUserPermissionResponse) GetUserPermissions() []*summary.PermissionSummary {
	if x != nil {
		return x.UserPermissions
	}
	return nil
}

type AssignPermissionsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Login          string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	PermissionsIds []string               `protobuf:"bytes,2,rep,name=permissions_ids,json=permissionsIds,proto3" json:"permissions_ids,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AssignPermissionsRequest) Reset() {
	*x = AssignPermissionsRequest{}
	mi := &file_apfish_v1_user_permission_permission_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignPermissionsRequest) ProtoMessage() {}

func (x *AssignPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_user_permission_permission_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignPermissionsRequest.ProtoReflect.Descriptor instead.
func (*AssignPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_apfish_v1_user_permission_permission_service_proto_rawDescGZIP(), []int{2}
}

func (x *AssignPermissionsRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *AssignPermissionsRequest) GetPermissionsIds() []string {
	if x != nil {
		return x.PermissionsIds
	}
	return nil
}

var File_apfish_v1_user_permission_permission_service_proto protoreflect.FileDescriptor

const file_apfish_v1_user_permission_permission_service_proto_rawDesc = "" +
	"\n" +
	"2apfish.v1/user/permission/permission_service.proto\x12\x19apfish.v1.user.permission\x1a5apfish.v1/permission/summary/permission_summary.proto\x1a\x1dapfish.v1/helper/helper.proto\"1\n" +
	"\x19ListUserPermissionRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\"x\n" +
	"\x1aListUserPermissionResponse\x12Z\n" +
	"\x10user_permissions\x18\x01 \x03(\v2/.apfish.v1.permission.summary.PermissionSummaryR\x0fuserPermissions\"Y\n" +
	"\x18AssignPermissionsRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\x12'\n" +
	"\x0fpermissions_ids\x18\x02 \x03(\tR\x0epermissionsIds2\x89\x02\n" +
	"\x15UserPermissionService\x12\x82\x01\n" +
	"\x13ListUserPermissions\x124.apfish.v1.user.permission.ListUserPermissionRequest\x1a5.apfish.v1.user.permission.ListUserPermissionResponse\x12k\n" +
	"\x11AssignPermissions\x123.apfish.v1.user.permission.AssignPermissionsRequest\x1a!.apfish.v1.helper.SuccessResponseBRZPgithub.com/ZhuchkovAA/protoRMRF/gen/go/apfish.v1/user/permission;user_permissionb\x06proto3"

var (
	file_apfish_v1_user_permission_permission_service_proto_rawDescOnce sync.Once
	file_apfish_v1_user_permission_permission_service_proto_rawDescData []byte
)

func file_apfish_v1_user_permission_permission_service_proto_rawDescGZIP() []byte {
	file_apfish_v1_user_permission_permission_service_proto_rawDescOnce.Do(func() {
		file_apfish_v1_user_permission_permission_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apfish_v1_user_permission_permission_service_proto_rawDesc), len(file_apfish_v1_user_permission_permission_service_proto_rawDesc)))
	})
	return file_apfish_v1_user_permission_permission_service_proto_rawDescData
}

var file_apfish_v1_user_permission_permission_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_apfish_v1_user_permission_permission_service_proto_goTypes = []any{
	(*ListUserPermissionRequest)(nil),  // 0: apfish.v1.user.permission.ListUserPermissionRequest
	(*ListUserPermissionResponse)(nil), // 1: apfish.v1.user.permission.ListUserPermissionResponse
	(*AssignPermissionsRequest)(nil),   // 2: apfish.v1.user.permission.AssignPermissionsRequest
	(*summary.PermissionSummary)(nil),  // 3: apfish.v1.permission.summary.PermissionSummary
	(*helper.SuccessResponse)(nil),     // 4: apfish.v1.helper.SuccessResponse
}
var file_apfish_v1_user_permission_permission_service_proto_depIdxs = []int32{
	3, // 0: apfish.v1.user.permission.ListUserPermissionResponse.user_permissions:type_name -> apfish.v1.permission.summary.PermissionSummary
	0, // 1: apfish.v1.user.permission.UserPermissionService.ListUserPermissions:input_type -> apfish.v1.user.permission.ListUserPermissionRequest
	2, // 2: apfish.v1.user.permission.UserPermissionService.AssignPermissions:input_type -> apfish.v1.user.permission.AssignPermissionsRequest
	1, // 3: apfish.v1.user.permission.UserPermissionService.ListUserPermissions:output_type -> apfish.v1.user.permission.ListUserPermissionResponse
	4, // 4: apfish.v1.user.permission.UserPermissionService.AssignPermissions:output_type -> apfish.v1.helper.SuccessResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_apfish_v1_user_permission_permission_service_proto_init() }
func file_apfish_v1_user_permission_permission_service_proto_init() {
	if File_apfish_v1_user_permission_permission_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apfish_v1_user_permission_permission_service_proto_rawDesc), len(file_apfish_v1_user_permission_permission_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apfish_v1_user_permission_permission_service_proto_goTypes,
		DependencyIndexes: file_apfish_v1_user_permission_permission_service_proto_depIdxs,
		MessageInfos:      file_apfish_v1_user_permission_permission_service_proto_msgTypes,
	}.Build()
	File_apfish_v1_user_permission_permission_service_proto = out.File
	file_apfish_v1_user_permission_permission_service_proto_goTypes = nil
	file_apfish_v1_user_permission_permission_service_proto_depIdxs = nil
}
