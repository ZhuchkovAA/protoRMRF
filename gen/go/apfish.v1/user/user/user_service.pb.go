// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: apfish.v1/user/user/user_service.proto

package user

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to fetch a specific user.
type UserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"` // Exact login identifier (e.g., "john.doe").
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	mi := &file_apfish_v1_user_user_user_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_user_user_user_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_apfish_v1_user_user_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *UserRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// Response containing the requested user.
type UserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // Full user profile data.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	mi := &file_apfish_v1_user_user_user_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_user_user_user_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_apfish_v1_user_user_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *UserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Paginated request for user search.
type ListUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`                     // Optional login prefix filter (e.g., "joh").
	Page          int64                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                      // Page number (1-based). Default: 1.
	PerPage       int64                  `protobuf:"varint,3,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"` // Items per page (default: 20, max: 100).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_apfish_v1_user_user_user_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_user_user_user_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_apfish_v1_user_user_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListUsersRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *ListUsersRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListUsersRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

// Paginated user list response.
type ListUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`  // Users matching the query (max `per_page` entries).
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // Total matching users (ignoring pagination).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_apfish_v1_user_user_user_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_user_user_user_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_apfish_v1_user_user_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUsersResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_apfish_v1_user_user_user_service_proto protoreflect.FileDescriptor

const file_apfish_v1_user_user_user_service_proto_rawDesc = "" +
	"\n" +
	"&apfish.v1/user/user/user_service.proto\x12\x04user\x1a\x1eapfish.v1/user/user/user.proto\"#\n" +
	"\vUserRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\".\n" +
	"\fUserResponse\x12\x1e\n" +
	"\x04user\x18\x01 \x01(\v2\n" +
	".user.UserR\x04user\"W\n" +
	"\x10ListUsersRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x03R\x04page\x12\x19\n" +
	"\bper_page\x18\x03 \x01(\x03R\aperPage\"K\n" +
	"\x11ListUsersResponse\x12 \n" +
	"\x05users\x18\x01 \x03(\v2\n" +
	".user.UserR\x05users\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total2}\n" +
	"\vUserService\x120\n" +
	"\aGetUser\x12\x11.user.UserRequest\x1a\x12.user.UserResponse\x12<\n" +
	"\tListUsers\x12\x16.user.ListUsersRequest\x1a\x17.user.ListUsersResponseBAZ?github.com/ZhuchkovAA/protoRMRF/gen/go/apfish.v1/user/user;userb\x06proto3"

var (
	file_apfish_v1_user_user_user_service_proto_rawDescOnce sync.Once
	file_apfish_v1_user_user_user_service_proto_rawDescData []byte
)

func file_apfish_v1_user_user_user_service_proto_rawDescGZIP() []byte {
	file_apfish_v1_user_user_user_service_proto_rawDescOnce.Do(func() {
		file_apfish_v1_user_user_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apfish_v1_user_user_user_service_proto_rawDesc), len(file_apfish_v1_user_user_user_service_proto_rawDesc)))
	})
	return file_apfish_v1_user_user_user_service_proto_rawDescData
}

var file_apfish_v1_user_user_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_apfish_v1_user_user_user_service_proto_goTypes = []any{
	(*UserRequest)(nil),       // 0: user.UserRequest
	(*UserResponse)(nil),      // 1: user.UserResponse
	(*ListUsersRequest)(nil),  // 2: user.ListUsersRequest
	(*ListUsersResponse)(nil), // 3: user.ListUsersResponse
	(*User)(nil),              // 4: user.User
}
var file_apfish_v1_user_user_user_service_proto_depIdxs = []int32{
	4, // 0: user.UserResponse.user:type_name -> user.User
	4, // 1: user.ListUsersResponse.users:type_name -> user.User
	0, // 2: user.UserService.GetUser:input_type -> user.UserRequest
	2, // 3: user.UserService.ListUsers:input_type -> user.ListUsersRequest
	1, // 4: user.UserService.GetUser:output_type -> user.UserResponse
	3, // 5: user.UserService.ListUsers:output_type -> user.ListUsersResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_apfish_v1_user_user_user_service_proto_init() }
func file_apfish_v1_user_user_user_service_proto_init() {
	if File_apfish_v1_user_user_user_service_proto != nil {
		return
	}
	file_apfish_v1_user_user_user_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apfish_v1_user_user_user_service_proto_rawDesc), len(file_apfish_v1_user_user_user_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apfish_v1_user_user_user_service_proto_goTypes,
		DependencyIndexes: file_apfish_v1_user_user_user_service_proto_depIdxs,
		MessageInfos:      file_apfish_v1_user_user_user_service_proto_msgTypes,
	}.Build()
	File_apfish_v1_user_user_user_service_proto = out.File
	file_apfish_v1_user_user_user_service_proto_goTypes = nil
	file_apfish_v1_user_user_user_service_proto_depIdxs = nil
}
