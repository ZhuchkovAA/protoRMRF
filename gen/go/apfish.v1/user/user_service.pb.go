// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: apfish.v1/user/user_service.proto

package user

import (
	__helper "github.com/ZhuchkovAA/protoRMRF/gen/go/apfish.v1/_helper"
	summary "github.com/ZhuchkovAA/protoRMRF/gen/go/apfish.v1/user/summary"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to fetch a specific user.
type UserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	mi := &file_apfish_v1_user_user_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_user_user_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_apfish_v1_user_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *UserRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// Response containing the requested user.
type UserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // Full user profile data.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	mi := &file_apfish_v1_user_user_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_user_user_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_apfish_v1_user_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *UserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Paginated request for user search.
type ListUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`                     // Optional login prefix filter (e.g., "joh").
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                      // Page number (1-based). Default: 1.
	PerPage       int32                  `protobuf:"varint,3,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"` // Items per page (default: 20, max: 100).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_apfish_v1_user_user_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_user_user_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_apfish_v1_user_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListUsersRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *ListUsersRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListUsersRequest) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

// Paginated user list response.
type ListUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*summary.UserSummary `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`  // Users matching the query (max `per_page` entries).
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // Total matching users (ignoring pagination).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_apfish_v1_user_user_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_user_user_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_apfish_v1_user_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListUsersResponse) GetUsers() []*summary.UserSummary {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUsersResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	FirstName     string                 `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	MiddleName    string                 `protobuf:"bytes,5,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	mi := &file_apfish_v1_user_user_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_user_user_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_apfish_v1_user_user_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateUserRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *CreateUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CreateUserRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CreateUserRequest) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *UserPatch             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_apfish_v1_user_user_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_user_user_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_apfish_v1_user_user_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateUserRequest) GetUser() *UserPatch {
	if x != nil {
		return x.User
	}
	return nil
}

var File_apfish_v1_user_user_service_proto protoreflect.FileDescriptor

const file_apfish_v1_user_user_service_proto_rawDesc = "" +
	"\n" +
	"!apfish.v1/user/user_service.proto\x12\x0eapfish.v1.user\x1a\x1fapfish.v1/_helper/_helper.proto\x1a\x19apfish.v1/user/user.proto\x1a)apfish.v1/user/summary/user_summary.proto\"#\n" +
	"\vUserRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\"8\n" +
	"\fUserResponse\x12(\n" +
	"\x04user\x18\x01 \x01(\v2\x14.apfish.v1.user.UserR\x04user\"W\n" +
	"\x10ListUsersRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x19\n" +
	"\bper_page\x18\x03 \x01(\x05R\aperPage\"d\n" +
	"\x11ListUsersResponse\x129\n" +
	"\x05users\x18\x01 \x03(\v2#.apfish.v1.user.summary.UserSummaryR\x05users\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xa2\x01\n" +
	"\x11CreateUserRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x1d\n" +
	"\n" +
	"first_name\x18\x03 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x04 \x01(\tR\blastName\x12\x1f\n" +
	"\vmiddle_name\x18\x05 \x01(\tR\n" +
	"middleName\"B\n" +
	"\x11UpdateUserRequest\x12-\n" +
	"\x04user\x18\x01 \x01(\v2\x19.apfish.v1.user.UserPatchR\x04user2\xcf\x02\n" +
	"\vUserService\x12D\n" +
	"\aGetUser\x12\x1b.apfish.v1.user.UserRequest\x1a\x1c.apfish.v1.user.UserResponse\x12P\n" +
	"\tListUsers\x12 .apfish.v1.user.ListUsersRequest\x1a!.apfish.v1.user.ListUsersResponse\x12S\n" +
	"\n" +
	"CreateUser\x12!.apfish.v1.user.CreateUserRequest\x1a\".apfish.v1._helper.SuccessResponse\x12S\n" +
	"\n" +
	"UpdateUser\x12!.apfish.v1.user.UpdateUserRequest\x1a\".apfish.v1._helper.SuccessResponseB<Z:github.com/ZhuchkovAA/protoRMRF/gen/go/apfish.v1/user;userb\x06proto3"

var (
	file_apfish_v1_user_user_service_proto_rawDescOnce sync.Once
	file_apfish_v1_user_user_service_proto_rawDescData []byte
)

func file_apfish_v1_user_user_service_proto_rawDescGZIP() []byte {
	file_apfish_v1_user_user_service_proto_rawDescOnce.Do(func() {
		file_apfish_v1_user_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apfish_v1_user_user_service_proto_rawDesc), len(file_apfish_v1_user_user_service_proto_rawDesc)))
	})
	return file_apfish_v1_user_user_service_proto_rawDescData
}

var file_apfish_v1_user_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_apfish_v1_user_user_service_proto_goTypes = []any{
	(*UserRequest)(nil),              // 0: apfish.v1.user.UserRequest
	(*UserResponse)(nil),             // 1: apfish.v1.user.UserResponse
	(*ListUsersRequest)(nil),         // 2: apfish.v1.user.ListUsersRequest
	(*ListUsersResponse)(nil),        // 3: apfish.v1.user.ListUsersResponse
	(*CreateUserRequest)(nil),        // 4: apfish.v1.user.CreateUserRequest
	(*UpdateUserRequest)(nil),        // 5: apfish.v1.user.UpdateUserRequest
	(*User)(nil),                     // 6: apfish.v1.user.User
	(*summary.UserSummary)(nil),      // 7: apfish.v1.user.summary.UserSummary
	(*UserPatch)(nil),                // 8: apfish.v1.user.UserPatch
	(*__helper.SuccessResponse)(nil), // 9: apfish.v1._helper.SuccessResponse
}
var file_apfish_v1_user_user_service_proto_depIdxs = []int32{
	6, // 0: apfish.v1.user.UserResponse.user:type_name -> apfish.v1.user.User
	7, // 1: apfish.v1.user.ListUsersResponse.users:type_name -> apfish.v1.user.summary.UserSummary
	8, // 2: apfish.v1.user.UpdateUserRequest.user:type_name -> apfish.v1.user.UserPatch
	0, // 3: apfish.v1.user.UserService.GetUser:input_type -> apfish.v1.user.UserRequest
	2, // 4: apfish.v1.user.UserService.ListUsers:input_type -> apfish.v1.user.ListUsersRequest
	4, // 5: apfish.v1.user.UserService.CreateUser:input_type -> apfish.v1.user.CreateUserRequest
	5, // 6: apfish.v1.user.UserService.UpdateUser:input_type -> apfish.v1.user.UpdateUserRequest
	1, // 7: apfish.v1.user.UserService.GetUser:output_type -> apfish.v1.user.UserResponse
	3, // 8: apfish.v1.user.UserService.ListUsers:output_type -> apfish.v1.user.ListUsersResponse
	9, // 9: apfish.v1.user.UserService.CreateUser:output_type -> apfish.v1._helper.SuccessResponse
	9, // 10: apfish.v1.user.UserService.UpdateUser:output_type -> apfish.v1._helper.SuccessResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_apfish_v1_user_user_service_proto_init() }
func file_apfish_v1_user_user_service_proto_init() {
	if File_apfish_v1_user_user_service_proto != nil {
		return
	}
	file_apfish_v1_user_user_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apfish_v1_user_user_service_proto_rawDesc), len(file_apfish_v1_user_user_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apfish_v1_user_user_service_proto_goTypes,
		DependencyIndexes: file_apfish_v1_user_user_service_proto_depIdxs,
		MessageInfos:      file_apfish_v1_user_user_service_proto_msgTypes,
	}.Build()
	File_apfish_v1_user_user_service_proto = out.File
	file_apfish_v1_user_user_service_proto_goTypes = nil
	file_apfish_v1_user_user_service_proto_depIdxs = nil
}
