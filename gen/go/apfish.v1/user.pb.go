// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: apfish/user.proto

package apfishv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SearchVal     string                 `protobuf:"bytes,1,opt,name=search_val,json=searchVal,proto3" json:"search_val,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PerPage       int32                  `protobuf:"varint,3,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsersRequest) Reset() {
	*x = UsersRequest{}
	mi := &file_apfish_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersRequest) ProtoMessage() {}

func (x *UsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersRequest.ProtoReflect.Descriptor instead.
func (*UsersRequest) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{0}
}

func (x *UsersRequest) GetSearchVal() string {
	if x != nil {
		return x.SearchVal
	}
	return ""
}

func (x *UsersRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UsersRequest) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type UserRights struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsMou         bool                   `protobuf:"varint,1,opt,name=is_mou,json=isMou,proto3" json:"is_mou,omitempty"`
	Authority     string                 `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
	District      string                 `protobuf:"bytes,3,opt,name=district,proto3" json:"district,omitempty"`
	Port          string                 `protobuf:"bytes,4,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRights) Reset() {
	*x = UserRights{}
	mi := &file_apfish_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRights) ProtoMessage() {}

func (x *UserRights) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRights.ProtoReflect.Descriptor instead.
func (*UserRights) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{1}
}

func (x *UserRights) GetIsMou() bool {
	if x != nil {
		return x.IsMou
	}
	return false
}

func (x *UserRights) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *UserRights) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *UserRights) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rights        *UserRights            `protobuf:"bytes,3,opt,name=rights,proto3" json:"rights,omitempty"`
	Position      string                 `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	IsActive      bool                   `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_apfish_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{2}
}

func (x *UserInfo) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetRights() *UserRights {
	if x != nil {
		return x.Rights
	}
	return nil
}

func (x *UserInfo) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *UserInfo) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type UsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*UserInfo            `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsersResponse) Reset() {
	*x = UsersResponse{}
	mi := &file_apfish_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersResponse) ProtoMessage() {}

func (x *UsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersResponse.ProtoReflect.Descriptor instead.
func (*UsersResponse) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{3}
}

func (x *UsersResponse) GetUsers() []*UserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *UsersResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_apfish_user_proto protoreflect.FileDescriptor

const file_apfish_user_proto_rawDesc = "" +
	"\n" +
	"\x11apfish/user.proto\x12\x04user\"\\\n" +
	"\fUsersRequest\x12\x1d\n" +
	"\n" +
	"search_val\x18\x01 \x01(\tR\tsearchVal\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x19\n" +
	"\bper_page\x18\x03 \x01(\x05R\aperPage\"q\n" +
	"\n" +
	"UserRights\x12\x15\n" +
	"\x06is_mou\x18\x01 \x01(\bR\x05isMou\x12\x1c\n" +
	"\tauthority\x18\x02 \x01(\tR\tauthority\x12\x1a\n" +
	"\bdistrict\x18\x03 \x01(\tR\bdistrict\x12\x12\n" +
	"\x04port\x18\x04 \x01(\tR\x04port\"\x97\x01\n" +
	"\bUserInfo\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12(\n" +
	"\x06rights\x18\x03 \x01(\v2\x10.user.UserRightsR\x06rights\x12\x1a\n" +
	"\bposition\x18\x04 \x01(\tR\bposition\x12\x1b\n" +
	"\tis_active\x18\x05 \x01(\bR\bisActive\"K\n" +
	"\rUsersResponse\x12$\n" +
	"\x05users\x18\x01 \x03(\v2\x0e.user.UserInfoR\x05users\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count28\n" +
	"\x04User\x120\n" +
	"\x05Users\x12\x12.user.UsersRequest\x1a\x13.user.UsersResponseB\x14Z\x12apfish.v1;apfishv1b\x06proto3"

var (
	file_apfish_user_proto_rawDescOnce sync.Once
	file_apfish_user_proto_rawDescData []byte
)

func file_apfish_user_proto_rawDescGZIP() []byte {
	file_apfish_user_proto_rawDescOnce.Do(func() {
		file_apfish_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apfish_user_proto_rawDesc), len(file_apfish_user_proto_rawDesc)))
	})
	return file_apfish_user_proto_rawDescData
}

var file_apfish_user_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_apfish_user_proto_goTypes = []any{
	(*UsersRequest)(nil),  // 0: user.UsersRequest
	(*UserRights)(nil),    // 1: user.UserRights
	(*UserInfo)(nil),      // 2: user.UserInfo
	(*UsersResponse)(nil), // 3: user.UsersResponse
}
var file_apfish_user_proto_depIdxs = []int32{
	1, // 0: user.UserInfo.rights:type_name -> user.UserRights
	2, // 1: user.UsersResponse.users:type_name -> user.UserInfo
	0, // 2: user.User.Users:input_type -> user.UsersRequest
	3, // 3: user.User.Users:output_type -> user.UsersResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_apfish_user_proto_init() }
func file_apfish_user_proto_init() {
	if File_apfish_user_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apfish_user_proto_rawDesc), len(file_apfish_user_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apfish_user_proto_goTypes,
		DependencyIndexes: file_apfish_user_proto_depIdxs,
		MessageInfos:      file_apfish_user_proto_msgTypes,
	}.Build()
	File_apfish_user_proto = out.File
	file_apfish_user_proto_goTypes = nil
	file_apfish_user_proto_depIdxs = nil
}
