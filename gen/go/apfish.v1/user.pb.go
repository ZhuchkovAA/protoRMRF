// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: apfish/user.proto

package apfishv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to fetch a specific user.
type UserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"` // Exact login identifier (e.g., "john.doe").
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	mi := &file_apfish_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{0}
}

func (x *UserRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// Response containing the requested user.
type UserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // Full user profile data.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	mi := &file_apfish_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{1}
}

func (x *UserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Paginated request for user search.
type ListUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`                     // Optional login prefix filter (e.g., "joh").
	Page          int64                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                      // Page number (1-based). Default: 1.
	PerPage       int64                  `protobuf:"varint,3,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"` // Items per page (default: 20, max: 100).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_apfish_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{2}
}

func (x *ListUsersRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *ListUsersRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListUsersRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

// Paginated user list response.
type ListUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`  // Users matching the query (max `per_page` entries).
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // Total matching users (ignoring pagination).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_apfish_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{3}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUsersResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Represents a user account in the system.
type User struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                // Unique system-generated ID.
	Login          string                 `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`                                           // Unique login identifier.
	OfficialName   string                 `protobuf:"bytes,3,opt,name=official_name,json=officialName,proto3" json:"official_name,omitempty"`         // Formal name (e.g., "John Doe").
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                  // When the user was created.
	CreatedByLogin string                 `protobuf:"bytes,6,opt,name=created_by_login,json=createdByLogin,proto3" json:"created_by_login,omitempty"` // Login of the creator (e.g., "admin").
	Role           *Role                  `protobuf:"bytes,7,opt,name=role,proto3" json:"role,omitempty"`                                             // Assigned role.
	Permissions    []*Permission          `protobuf:"bytes,8,rep,name=permissions,proto3" json:"permissions,omitempty"`                               // Direct permissions (overrides role).
	Contacts       []*UserContact         `protobuf:"bytes,9,rep,name=contacts,proto3" json:"contacts,omitempty"`                                     // User's contact methods.
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_apfish_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{4}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *User) GetOfficialName() string {
	if x != nil {
		return x.OfficialName
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetCreatedByLogin() string {
	if x != nil {
		return x.CreatedByLogin
	}
	return ""
}

func (x *User) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *User) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *User) GetContacts() []*UserContact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

// Defines a user role (e.g., "Admin", "Editor").
type Role struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // Unique role ID.
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                            // Human-readable name (e.g., "Admin").
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`                            // Machine-friendly code (e.g., "admin").
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // When the role was created.
	Permissions   []*Permission          `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty"`              // Permissions granted by this role.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_apfish_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{5}
}

func (x *Role) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Role) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Role) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// A user's contact method (e.g., email, phone).
type UserContact struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // Unique contact ID.
	Type          *UserContactType       `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                            // Contact type.
	Value         string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`                          // Contact value (e.g., "user@example.com").
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // When the contact was added.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserContact) Reset() {
	*x = UserContact{}
	mi := &file_apfish_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserContact) ProtoMessage() {}

func (x *UserContact) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserContact.ProtoReflect.Descriptor instead.
func (*UserContact) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{6}
}

func (x *UserContact) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserContact) GetType() *UserContactType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *UserContact) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UserContact) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Type of contact method (e.g., "Email", "Phone").
type UserContactType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // Unique type ID.
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                            // Human-readable name (e.g., "Email").
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`                            // Machine-friendly code (e.g., "email").
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // When the type was defined.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserContactType) Reset() {
	*x = UserContactType{}
	mi := &file_apfish_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserContactType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserContactType) ProtoMessage() {}

func (x *UserContactType) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserContactType.ProtoReflect.Descriptor instead.
func (*UserContactType) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{7}
}

func (x *UserContactType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserContactType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserContactType) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserContactType) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File_apfish_user_proto protoreflect.FileDescriptor

const file_apfish_user_proto_rawDesc = "" +
	"\n" +
	"\x11apfish/user.proto\x12\x04user\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17apfish/permission.proto\"#\n" +
	"\vUserRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\".\n" +
	"\fUserResponse\x12\x1e\n" +
	"\x04user\x18\x01 \x01(\v2\n" +
	".user.UserR\x04user\"W\n" +
	"\x10ListUsersRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x03R\x04page\x12\x19\n" +
	"\bper_page\x18\x03 \x01(\x03R\aperPage\"K\n" +
	"\x11ListUsersResponse\x12 \n" +
	"\x05users\x18\x01 \x03(\v2\n" +
	".user.UserR\x05users\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xbf\x02\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05login\x18\x02 \x01(\tR\x05login\x12#\n" +
	"\rofficial_name\x18\x03 \x01(\tR\fofficialName\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12(\n" +
	"\x10created_by_login\x18\x06 \x01(\tR\x0ecreatedByLogin\x12\x1e\n" +
	"\x04role\x18\a \x01(\v2\n" +
	".user.RoleR\x04role\x128\n" +
	"\vpermissions\x18\b \x03(\v2\x16.permission.PermissionR\vpermissions\x12-\n" +
	"\bcontacts\x18\t \x03(\v2\x11.user.UserContactR\bcontacts\"\xb3\x01\n" +
	"\x04Role\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x128\n" +
	"\vpermissions\x18\x05 \x03(\v2\x16.permission.PermissionR\vpermissions\"\x99\x01\n" +
	"\vUserContact\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12)\n" +
	"\x04type\x18\x02 \x01(\v2\x15.user.UserContactTypeR\x04type\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x84\x01\n" +
	"\x0fUserContactType\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt2}\n" +
	"\vUserService\x120\n" +
	"\aGetUser\x12\x11.user.UserRequest\x1a\x12.user.UserResponse\x12<\n" +
	"\tListUsers\x12\x16.user.ListUsersRequest\x1a\x17.user.ListUsersResponseB\x14Z\x12apfish.v1;apfishv1b\x06proto3"

var (
	file_apfish_user_proto_rawDescOnce sync.Once
	file_apfish_user_proto_rawDescData []byte
)

func file_apfish_user_proto_rawDescGZIP() []byte {
	file_apfish_user_proto_rawDescOnce.Do(func() {
		file_apfish_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apfish_user_proto_rawDesc), len(file_apfish_user_proto_rawDesc)))
	})
	return file_apfish_user_proto_rawDescData
}

var file_apfish_user_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_apfish_user_proto_goTypes = []any{
	(*UserRequest)(nil),           // 0: user.UserRequest
	(*UserResponse)(nil),          // 1: user.UserResponse
	(*ListUsersRequest)(nil),      // 2: user.ListUsersRequest
	(*ListUsersResponse)(nil),     // 3: user.ListUsersResponse
	(*User)(nil),                  // 4: user.User
	(*Role)(nil),                  // 5: user.Role
	(*UserContact)(nil),           // 6: user.UserContact
	(*UserContactType)(nil),       // 7: user.UserContactType
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
	(*Permission)(nil),            // 9: permission.Permission
}
var file_apfish_user_proto_depIdxs = []int32{
	4,  // 0: user.UserResponse.user:type_name -> user.User
	4,  // 1: user.ListUsersResponse.users:type_name -> user.User
	8,  // 2: user.User.created_at:type_name -> google.protobuf.Timestamp
	5,  // 3: user.User.role:type_name -> user.Role
	9,  // 4: user.User.permissions:type_name -> permission.Permission
	6,  // 5: user.User.contacts:type_name -> user.UserContact
	8,  // 6: user.Role.created_at:type_name -> google.protobuf.Timestamp
	9,  // 7: user.Role.permissions:type_name -> permission.Permission
	7,  // 8: user.UserContact.type:type_name -> user.UserContactType
	8,  // 9: user.UserContact.created_at:type_name -> google.protobuf.Timestamp
	8,  // 10: user.UserContactType.created_at:type_name -> google.protobuf.Timestamp
	0,  // 11: user.UserService.GetUser:input_type -> user.UserRequest
	2,  // 12: user.UserService.ListUsers:input_type -> user.ListUsersRequest
	1,  // 13: user.UserService.GetUser:output_type -> user.UserResponse
	3,  // 14: user.UserService.ListUsers:output_type -> user.ListUsersResponse
	13, // [13:15] is the sub-list for method output_type
	11, // [11:13] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_apfish_user_proto_init() }
func file_apfish_user_proto_init() {
	if File_apfish_user_proto != nil {
		return
	}
	file_apfish_permission_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apfish_user_proto_rawDesc), len(file_apfish_user_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apfish_user_proto_goTypes,
		DependencyIndexes: file_apfish_user_proto_depIdxs,
		MessageInfos:      file_apfish_user_proto_msgTypes,
	}.Build()
	File_apfish_user_proto = out.File
	file_apfish_user_proto_goTypes = nil
	file_apfish_user_proto_depIdxs = nil
}
