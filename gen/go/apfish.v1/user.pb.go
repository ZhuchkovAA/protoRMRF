// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: apfish/user.proto

package apfishv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to fetch a specific user.
type UserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"` // Exact login identifier (e.g., "john.doe").
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	mi := &file_apfish_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{0}
}

func (x *UserRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

// Response containing the requested user.
type UserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // Full user profile data.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	mi := &file_apfish_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{1}
}

func (x *UserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Paginated request for user search.
type ListUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`                     // Optional login prefix filter (e.g., "joh").
	Page          int64                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                      // Page number (1-based). Default: 1.
	PerPage       int64                  `protobuf:"varint,3,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"` // Items per page (default: 20, max: 100).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_apfish_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{2}
}

func (x *ListUsersRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *ListUsersRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListUsersRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

// Paginated user list response.
type ListUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`  // Users matching the query (max `per_page` entries).
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // Total matching users (ignoring pagination).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_apfish_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{3}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUsersResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Represents a user account in the system.
type User struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                // Unique system-generated ID.
	Login          string                 `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`                                           // Unique login identifier.
	OfficialName   string                 `protobuf:"bytes,3,opt,name=official_name,json=officialName,proto3" json:"official_name,omitempty"`         // Formal name (e.g., "John Doe").
	Role           *Role                  `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`                                             // Assigned role.
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                  // When the user was created.
	CreatedByLogin string                 `protobuf:"bytes,6,opt,name=created_by_login,json=createdByLogin,proto3" json:"created_by_login,omitempty"` // Login of the creator (e.g., "admin").
	Permissions    []*Permission          `protobuf:"bytes,8,rep,name=permissions,proto3" json:"permissions,omitempty"`                               // Direct permissions (overrides role).
	Contacts       []*UserContact         `protobuf:"bytes,9,rep,name=contacts,proto3" json:"contacts,omitempty"`                                     // User's contact methods.
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_apfish_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{4}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *User) GetOfficialName() string {
	if x != nil {
		return x.OfficialName
	}
	return ""
}

func (x *User) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetCreatedByLogin() string {
	if x != nil {
		return x.CreatedByLogin
	}
	return ""
}

func (x *User) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *User) GetContacts() []*UserContact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

// Defines a user role (e.g., "Admin", "Editor").
type Role struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // Unique role ID.
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                            // Human-readable name (e.g., "Admin").
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`                            // Machine-friendly code (e.g., "admin").
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // When the role was created.
	Users         []*User                `protobuf:"bytes,5,rep,name=users,proto3" json:"users,omitempty"`
	Permissions   []*Permission          `protobuf:"bytes,6,rep,name=permissions,proto3" json:"permissions,omitempty"` // Permissions granted by this role.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_apfish_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{5}
}

func (x *Role) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Role) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Role) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Role) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// A user's contact method (e.g., email, phone).
type UserContact struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // Unique contact ID.
	Type          *UserContactType       `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                            // Contact type.
	Value         string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`                          // Contact value (e.g., "user@example.com").
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // When the contact was added.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserContact) Reset() {
	*x = UserContact{}
	mi := &file_apfish_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserContact) ProtoMessage() {}

func (x *UserContact) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserContact.ProtoReflect.Descriptor instead.
func (*UserContact) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{6}
}

func (x *UserContact) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserContact) GetType() *UserContactType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *UserContact) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UserContact) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Type of contact method (e.g., "Email", "Phone").
type UserContactType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // Unique type ID.
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                            // Human-readable name (e.g., "Email").
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`                            // Machine-friendly code (e.g., "email").
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // When the type was defined.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserContactType) Reset() {
	*x = UserContactType{}
	mi := &file_apfish_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserContactType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserContactType) ProtoMessage() {}

func (x *UserContactType) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserContactType.ProtoReflect.Descriptor instead.
func (*UserContactType) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{7}
}

func (x *UserContactType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserContactType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserContactType) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserContactType) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Defines an access permission in the system.
// Permissions combine an Action and Object to create granular access controls (e.g., "read:inspection").
type Permission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  // Unique identifier for the permission
	Action        *PermissionAction      `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`           // The operation this permission allows (e.g., "read", "create")
	Object        *PermissionObject      `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`           // The resource this permission applies to (e.g., "inspection", "user")
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` // Human-readable explanation of the permission
	Name          string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`               // Display name (e.g., "Read Inspections")
	Code          string                 `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`               // Machine-readable identifier (e.g., "inspection:read")
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Countries     []*Country             `protobuf:"bytes,8,rep,name=countries,proto3" json:"countries,omitempty"`
	Districts     []*District            `protobuf:"bytes,9,rep,name=districts,proto3" json:"districts,omitempty"`
	Ports         []*Port                `protobuf:"bytes,10,rep,name=ports,proto3" json:"ports,omitempty"`
	Users         []*User                `protobuf:"bytes,11,rep,name=users,proto3" json:"users,omitempty"`
	Roles         []*Role                `protobuf:"bytes,12,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permission) Reset() {
	*x = Permission{}
	mi := &file_apfish_user_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{8}
}

func (x *Permission) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Permission) GetAction() *PermissionAction {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *Permission) GetObject() *PermissionObject {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *Permission) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Permission) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Permission) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Permission) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Permission) GetCountries() []*Country {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *Permission) GetDistricts() []*District {
	if x != nil {
		return x.Districts
	}
	return nil
}

func (x *Permission) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Permission) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Permission) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

// Defines an actionable operation that can be performed in the system.
type PermissionAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  // Unique identifier for the action
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               // Human-readable name (e.g., "Read")
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // Detailed explanation of the action
	Code          string                 `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`               // Machine-friendly code (e.g., "read")
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Permissions   []*Permission          `protobuf:"bytes,6,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionAction) Reset() {
	*x = PermissionAction{}
	mi := &file_apfish_user_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionAction) ProtoMessage() {}

func (x *PermissionAction) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionAction.ProtoReflect.Descriptor instead.
func (*PermissionAction) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{9}
}

func (x *PermissionAction) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PermissionAction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PermissionAction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PermissionAction) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PermissionAction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PermissionAction) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// Defines a type of resource or object that can be accessed in the system.
type PermissionObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  // Unique identifier for the object type
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               // Human-readable name (e.g., "Inspection")
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // Detailed explanation of the object type
	Code          string                 `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`               // Machine-friendly code (e.g., "inspection")
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Permissions   []*Permission          `protobuf:"bytes,6,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionObject) Reset() {
	*x = PermissionObject{}
	mi := &file_apfish_user_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionObject) ProtoMessage() {}

func (x *PermissionObject) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionObject.ProtoReflect.Descriptor instead.
func (*PermissionObject) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{10}
}

func (x *PermissionObject) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PermissionObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PermissionObject) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PermissionObject) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PermissionObject) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PermissionObject) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type Country struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NameRus        string                 `protobuf:"bytes,3,opt,name=name_rus,json=nameRus,proto3" json:"name_rus,omitempty"`
	Code           string                 `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	IsIlo          bool                   `protobuf:"varint,5,opt,name=is_ilo,json=isIlo,proto3" json:"is_ilo,omitempty"`
	IsBallastWater bool                   `protobuf:"varint,6,opt,name=is_ballast_water,json=isBallastWater,proto3" json:"is_ballast_water,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Ports          []*Port                `protobuf:"bytes,8,rep,name=ports,proto3" json:"ports,omitempty"`
	CallSigns      []*CallSign            `protobuf:"bytes,9,rep,name=call_signs,json=callSigns,proto3" json:"call_signs,omitempty"`
	Permissions    []*Permission          `protobuf:"bytes,10,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Country) Reset() {
	*x = Country{}
	mi := &file_apfish_user_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Country) ProtoMessage() {}

func (x *Country) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Country.ProtoReflect.Descriptor instead.
func (*Country) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{11}
}

func (x *Country) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Country) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Country) GetNameRus() string {
	if x != nil {
		return x.NameRus
	}
	return ""
}

func (x *Country) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Country) GetIsIlo() bool {
	if x != nil {
		return x.IsIlo
	}
	return false
}

func (x *Country) GetIsBallastWater() bool {
	if x != nil {
		return x.IsBallastWater
	}
	return false
}

func (x *Country) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Country) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Country) GetCallSigns() []*CallSign {
	if x != nil {
		return x.CallSigns
	}
	return nil
}

func (x *Country) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type District struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Ports         []*Port                `protobuf:"bytes,4,rep,name=ports,proto3" json:"ports,omitempty"`
	Permissions   []*Permission          `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *District) Reset() {
	*x = District{}
	mi := &file_apfish_user_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *District) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*District) ProtoMessage() {}

func (x *District) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use District.ProtoReflect.Descriptor instead.
func (*District) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{12}
}

func (x *District) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *District) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *District) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *District) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *District) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type Port struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Country       *Country               `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	District      *District              `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
	Code          string                 `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Permissions   []*Permission          `protobuf:"bytes,7,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Port) Reset() {
	*x = Port{}
	mi := &file_apfish_user_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{13}
}

func (x *Port) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Port) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Port) GetCountry() *Country {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *Port) GetDistrict() *District {
	if x != nil {
		return x.District
	}
	return nil
}

func (x *Port) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Port) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Port) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type CallSign struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Series        string                 `protobuf:"bytes,2,opt,name=series,proto3" json:"series,omitempty"`
	LimitLower    string                 `protobuf:"bytes,3,opt,name=limit_lower,json=limitLower,proto3" json:"limit_lower,omitempty"`
	LimitUpper    string                 `protobuf:"bytes,4,opt,name=limit_upper,json=limitUpper,proto3" json:"limit_upper,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Countries     []*Country             `protobuf:"bytes,6,rep,name=countries,proto3" json:"countries,omitempty"`
	Ships         []*Ship                `protobuf:"bytes,7,rep,name=ships,proto3" json:"ships,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallSign) Reset() {
	*x = CallSign{}
	mi := &file_apfish_user_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallSign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallSign) ProtoMessage() {}

func (x *CallSign) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallSign.ProtoReflect.Descriptor instead.
func (*CallSign) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{14}
}

func (x *CallSign) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CallSign) GetSeries() string {
	if x != nil {
		return x.Series
	}
	return ""
}

func (x *CallSign) GetLimitLower() string {
	if x != nil {
		return x.LimitLower
	}
	return ""
}

func (x *CallSign) GetLimitUpper() string {
	if x != nil {
		return x.LimitUpper
	}
	return ""
}

func (x *CallSign) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CallSign) GetCountries() []*Country {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *CallSign) GetShips() []*Ship {
	if x != nil {
		return x.Ships
	}
	return nil
}

type Ship struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Imo           int64                  `protobuf:"varint,2,opt,name=imo,proto3" json:"imo,omitempty"`
	Type          *ShipType              `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Class         *ShipClass             `protobuf:"bytes,4,opt,name=class,proto3" json:"class,omitempty"`
	Country       *Country               `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	Name          string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Mmsi          int64                  `protobuf:"varint,7,opt,name=mmsi,proto3" json:"mmsi,omitempty"`
	CallSign      *CallSign              `protobuf:"bytes,8,opt,name=call_sign,json=callSign,proto3" json:"call_sign,omitempty"`
	CallSignValue string                 `protobuf:"bytes,9,opt,name=call_sign_value,json=callSignValue,proto3" json:"call_sign_value,omitempty"`
	DateBuild     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=date_build,json=dateBuild,proto3" json:"date_build,omitempty"`
	DeadWeight    int64                  `protobuf:"varint,11,opt,name=dead_weight,json=deadWeight,proto3" json:"dead_weight,omitempty"`
	Tonnage       int64                  `protobuf:"varint,12,opt,name=tonnage,proto3" json:"tonnage,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Captains      []*Captain             `protobuf:"bytes,14,rep,name=captains,proto3" json:"captains,omitempty"`
	Permissions   []*Permission          `protobuf:"bytes,15,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ship) Reset() {
	*x = Ship{}
	mi := &file_apfish_user_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ship) ProtoMessage() {}

func (x *Ship) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ship.ProtoReflect.Descriptor instead.
func (*Ship) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{15}
}

func (x *Ship) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Ship) GetImo() int64 {
	if x != nil {
		return x.Imo
	}
	return 0
}

func (x *Ship) GetType() *ShipType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Ship) GetClass() *ShipClass {
	if x != nil {
		return x.Class
	}
	return nil
}

func (x *Ship) GetCountry() *Country {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *Ship) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ship) GetMmsi() int64 {
	if x != nil {
		return x.Mmsi
	}
	return 0
}

func (x *Ship) GetCallSign() *CallSign {
	if x != nil {
		return x.CallSign
	}
	return nil
}

func (x *Ship) GetCallSignValue() string {
	if x != nil {
		return x.CallSignValue
	}
	return ""
}

func (x *Ship) GetDateBuild() *timestamppb.Timestamp {
	if x != nil {
		return x.DateBuild
	}
	return nil
}

func (x *Ship) GetDeadWeight() int64 {
	if x != nil {
		return x.DeadWeight
	}
	return 0
}

func (x *Ship) GetTonnage() int64 {
	if x != nil {
		return x.Tonnage
	}
	return 0
}

func (x *Ship) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Ship) GetCaptains() []*Captain {
	if x != nil {
		return x.Captains
	}
	return nil
}

func (x *Ship) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type Captain struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Ships         []*Ship                `protobuf:"bytes,4,rep,name=ships,proto3" json:"ships,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Captain) Reset() {
	*x = Captain{}
	mi := &file_apfish_user_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Captain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Captain) ProtoMessage() {}

func (x *Captain) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Captain.ProtoReflect.Descriptor instead.
func (*Captain) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{16}
}

func (x *Captain) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Captain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Captain) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Captain) GetShips() []*Ship {
	if x != nil {
		return x.Ships
	}
	return nil
}

type ShipType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Ships         []*Ship                `protobuf:"bytes,4,rep,name=ships,proto3" json:"ships,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShipType) Reset() {
	*x = ShipType{}
	mi := &file_apfish_user_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShipType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipType) ProtoMessage() {}

func (x *ShipType) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipType.ProtoReflect.Descriptor instead.
func (*ShipType) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{17}
}

func (x *ShipType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShipType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShipType) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ShipType) GetShips() []*Ship {
	if x != nil {
		return x.Ships
	}
	return nil
}

type ShipClass struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Ships         []*Ship                `protobuf:"bytes,4,rep,name=ships,proto3" json:"ships,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShipClass) Reset() {
	*x = ShipClass{}
	mi := &file_apfish_user_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShipClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipClass) ProtoMessage() {}

func (x *ShipClass) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_user_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipClass.ProtoReflect.Descriptor instead.
func (*ShipClass) Descriptor() ([]byte, []int) {
	return file_apfish_user_proto_rawDescGZIP(), []int{18}
}

func (x *ShipClass) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShipClass) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShipClass) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ShipClass) GetShips() []*Ship {
	if x != nil {
		return x.Ships
	}
	return nil
}

var File_apfish_user_proto protoreflect.FileDescriptor

const file_apfish_user_proto_rawDesc = "" +
	"\n" +
	"\x11apfish/user.proto\x12\x04user\x1a\x1fgoogle/protobuf/timestamp.proto\"#\n" +
	"\vUserRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\".\n" +
	"\fUserResponse\x12\x1e\n" +
	"\x04user\x18\x01 \x01(\v2\n" +
	".user.UserR\x04user\"W\n" +
	"\x10ListUsersRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x03R\x04page\x12\x19\n" +
	"\bper_page\x18\x03 \x01(\x03R\aperPage\"K\n" +
	"\x11ListUsersResponse\x12 \n" +
	"\x05users\x18\x01 \x03(\v2\n" +
	".user.UserR\x05users\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xb9\x02\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05login\x18\x02 \x01(\tR\x05login\x12#\n" +
	"\rofficial_name\x18\x03 \x01(\tR\fofficialName\x12\x1e\n" +
	"\x04role\x18\x04 \x01(\v2\n" +
	".user.RoleR\x04role\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12(\n" +
	"\x10created_by_login\x18\x06 \x01(\tR\x0ecreatedByLogin\x122\n" +
	"\vpermissions\x18\b \x03(\v2\x10.user.PermissionR\vpermissions\x12-\n" +
	"\bcontacts\x18\t \x03(\v2\x11.user.UserContactR\bcontacts\"\xcf\x01\n" +
	"\x04Role\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12 \n" +
	"\x05users\x18\x05 \x03(\v2\n" +
	".user.UserR\x05users\x122\n" +
	"\vpermissions\x18\x06 \x03(\v2\x10.user.PermissionR\vpermissions\"\x99\x01\n" +
	"\vUserContact\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12)\n" +
	"\x04type\x18\x02 \x01(\v2\x15.user.UserContactTypeR\x04type\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x84\x01\n" +
	"\x0fUserContactType\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xc2\x03\n" +
	"\n" +
	"Permission\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12.\n" +
	"\x06action\x18\x02 \x01(\v2\x16.user.PermissionActionR\x06action\x12.\n" +
	"\x06object\x18\x03 \x01(\v2\x16.user.PermissionObjectR\x06object\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x06 \x01(\tR\x04code\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12+\n" +
	"\tcountries\x18\b \x03(\v2\r.user.CountryR\tcountries\x12,\n" +
	"\tdistricts\x18\t \x03(\v2\x0e.user.DistrictR\tdistricts\x12 \n" +
	"\x05ports\x18\n" +
	" \x03(\v2\n" +
	".user.PortR\x05ports\x12 \n" +
	"\x05users\x18\v \x03(\v2\n" +
	".user.UserR\x05users\x12 \n" +
	"\x05roles\x18\f \x03(\v2\n" +
	".user.RoleR\x05roles\"\xdb\x01\n" +
	"\x10PermissionAction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x12\n" +
	"\x04code\x18\x04 \x01(\tR\x04code\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x122\n" +
	"\vpermissions\x18\x06 \x03(\v2\x10.user.PermissionR\vpermissions\"\xdb\x01\n" +
	"\x10PermissionObject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x12\n" +
	"\x04code\x18\x04 \x01(\tR\x04code\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x122\n" +
	"\vpermissions\x18\x06 \x03(\v2\x10.user.PermissionR\vpermissions\"\xdd\x02\n" +
	"\aCountry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x19\n" +
	"\bname_rus\x18\x03 \x01(\tR\anameRus\x12\x12\n" +
	"\x04code\x18\x04 \x01(\tR\x04code\x12\x15\n" +
	"\x06is_ilo\x18\x05 \x01(\bR\x05isIlo\x12(\n" +
	"\x10is_ballast_water\x18\x06 \x01(\bR\x0eisBallastWater\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12 \n" +
	"\x05ports\x18\b \x03(\v2\n" +
	".user.PortR\x05ports\x12-\n" +
	"\n" +
	"call_signs\x18\t \x03(\v2\x0e.user.CallSignR\tcallSigns\x122\n" +
	"\vpermissions\x18\n" +
	" \x03(\v2\x10.user.PermissionR\vpermissions\"\xbf\x01\n" +
	"\bDistrict\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12 \n" +
	"\x05ports\x18\x04 \x03(\v2\n" +
	".user.PortR\x05ports\x122\n" +
	"\vpermissions\x18\x05 \x03(\v2\x10.user.PermissionR\vpermissions\"\x82\x02\n" +
	"\x04Port\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12'\n" +
	"\acountry\x18\x03 \x01(\v2\r.user.CountryR\acountry\x12*\n" +
	"\bdistrict\x18\x04 \x01(\v2\x0e.user.DistrictR\bdistrict\x12\x12\n" +
	"\x04code\x18\x05 \x01(\tR\x04code\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x122\n" +
	"\vpermissions\x18\a \x03(\v2\x10.user.PermissionR\vpermissions\"\xfe\x01\n" +
	"\bCallSign\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06series\x18\x02 \x01(\tR\x06series\x12\x1f\n" +
	"\vlimit_lower\x18\x03 \x01(\tR\n" +
	"limitLower\x12\x1f\n" +
	"\vlimit_upper\x18\x04 \x01(\tR\n" +
	"limitUpper\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12+\n" +
	"\tcountries\x18\x06 \x03(\v2\r.user.CountryR\tcountries\x12 \n" +
	"\x05ships\x18\a \x03(\v2\n" +
	".user.ShipR\x05ships\"\xa9\x04\n" +
	"\x04Ship\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x10\n" +
	"\x03imo\x18\x02 \x01(\x03R\x03imo\x12\"\n" +
	"\x04type\x18\x03 \x01(\v2\x0e.user.ShipTypeR\x04type\x12%\n" +
	"\x05class\x18\x04 \x01(\v2\x0f.user.ShipClassR\x05class\x12'\n" +
	"\acountry\x18\x05 \x01(\v2\r.user.CountryR\acountry\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x12\x12\n" +
	"\x04mmsi\x18\a \x01(\x03R\x04mmsi\x12+\n" +
	"\tcall_sign\x18\b \x01(\v2\x0e.user.CallSignR\bcallSign\x12&\n" +
	"\x0fcall_sign_value\x18\t \x01(\tR\rcallSignValue\x129\n" +
	"\n" +
	"date_build\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tdateBuild\x12\x1f\n" +
	"\vdead_weight\x18\v \x01(\x03R\n" +
	"deadWeight\x12\x18\n" +
	"\atonnage\x18\f \x01(\x03R\atonnage\x129\n" +
	"\n" +
	"created_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12)\n" +
	"\bcaptains\x18\x0e \x03(\v2\r.user.CaptainR\bcaptains\x122\n" +
	"\vpermissions\x18\x0f \x03(\v2\x10.user.PermissionR\vpermissions\"\x8a\x01\n" +
	"\aCaptain\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12 \n" +
	"\x05ships\x18\x04 \x03(\v2\n" +
	".user.ShipR\x05ships\"\x8b\x01\n" +
	"\bShipType\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12 \n" +
	"\x05ships\x18\x04 \x03(\v2\n" +
	".user.ShipR\x05ships\"\x8c\x01\n" +
	"\tShipClass\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12 \n" +
	"\x05ships\x18\x04 \x03(\v2\n" +
	".user.ShipR\x05ships2}\n" +
	"\vUserService\x120\n" +
	"\aGetUser\x12\x11.user.UserRequest\x1a\x12.user.UserResponse\x12<\n" +
	"\tListUsers\x12\x16.user.ListUsersRequest\x1a\x17.user.ListUsersResponseB\x14Z\x12apfish.v1;apfishv1b\x06proto3"

var (
	file_apfish_user_proto_rawDescOnce sync.Once
	file_apfish_user_proto_rawDescData []byte
)

func file_apfish_user_proto_rawDescGZIP() []byte {
	file_apfish_user_proto_rawDescOnce.Do(func() {
		file_apfish_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apfish_user_proto_rawDesc), len(file_apfish_user_proto_rawDesc)))
	})
	return file_apfish_user_proto_rawDescData
}

var file_apfish_user_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_apfish_user_proto_goTypes = []any{
	(*UserRequest)(nil),           // 0: user.UserRequest
	(*UserResponse)(nil),          // 1: user.UserResponse
	(*ListUsersRequest)(nil),      // 2: user.ListUsersRequest
	(*ListUsersResponse)(nil),     // 3: user.ListUsersResponse
	(*User)(nil),                  // 4: user.User
	(*Role)(nil),                  // 5: user.Role
	(*UserContact)(nil),           // 6: user.UserContact
	(*UserContactType)(nil),       // 7: user.UserContactType
	(*Permission)(nil),            // 8: user.Permission
	(*PermissionAction)(nil),      // 9: user.PermissionAction
	(*PermissionObject)(nil),      // 10: user.PermissionObject
	(*Country)(nil),               // 11: user.Country
	(*District)(nil),              // 12: user.District
	(*Port)(nil),                  // 13: user.Port
	(*CallSign)(nil),              // 14: user.CallSign
	(*Ship)(nil),                  // 15: user.Ship
	(*Captain)(nil),               // 16: user.Captain
	(*ShipType)(nil),              // 17: user.ShipType
	(*ShipClass)(nil),             // 18: user.ShipClass
	(*timestamppb.Timestamp)(nil), // 19: google.protobuf.Timestamp
}
var file_apfish_user_proto_depIdxs = []int32{
	4,  // 0: user.UserResponse.user:type_name -> user.User
	4,  // 1: user.ListUsersResponse.users:type_name -> user.User
	5,  // 2: user.User.role:type_name -> user.Role
	19, // 3: user.User.created_at:type_name -> google.protobuf.Timestamp
	8,  // 4: user.User.permissions:type_name -> user.Permission
	6,  // 5: user.User.contacts:type_name -> user.UserContact
	19, // 6: user.Role.created_at:type_name -> google.protobuf.Timestamp
	4,  // 7: user.Role.users:type_name -> user.User
	8,  // 8: user.Role.permissions:type_name -> user.Permission
	7,  // 9: user.UserContact.type:type_name -> user.UserContactType
	19, // 10: user.UserContact.created_at:type_name -> google.protobuf.Timestamp
	19, // 11: user.UserContactType.created_at:type_name -> google.protobuf.Timestamp
	9,  // 12: user.Permission.action:type_name -> user.PermissionAction
	10, // 13: user.Permission.object:type_name -> user.PermissionObject
	19, // 14: user.Permission.created_at:type_name -> google.protobuf.Timestamp
	11, // 15: user.Permission.countries:type_name -> user.Country
	12, // 16: user.Permission.districts:type_name -> user.District
	13, // 17: user.Permission.ports:type_name -> user.Port
	4,  // 18: user.Permission.users:type_name -> user.User
	5,  // 19: user.Permission.roles:type_name -> user.Role
	19, // 20: user.PermissionAction.created_at:type_name -> google.protobuf.Timestamp
	8,  // 21: user.PermissionAction.permissions:type_name -> user.Permission
	19, // 22: user.PermissionObject.created_at:type_name -> google.protobuf.Timestamp
	8,  // 23: user.PermissionObject.permissions:type_name -> user.Permission
	19, // 24: user.Country.created_at:type_name -> google.protobuf.Timestamp
	13, // 25: user.Country.ports:type_name -> user.Port
	14, // 26: user.Country.call_signs:type_name -> user.CallSign
	8,  // 27: user.Country.permissions:type_name -> user.Permission
	19, // 28: user.District.created_at:type_name -> google.protobuf.Timestamp
	13, // 29: user.District.ports:type_name -> user.Port
	8,  // 30: user.District.permissions:type_name -> user.Permission
	11, // 31: user.Port.country:type_name -> user.Country
	12, // 32: user.Port.district:type_name -> user.District
	19, // 33: user.Port.created_at:type_name -> google.protobuf.Timestamp
	8,  // 34: user.Port.permissions:type_name -> user.Permission
	19, // 35: user.CallSign.created_at:type_name -> google.protobuf.Timestamp
	11, // 36: user.CallSign.countries:type_name -> user.Country
	15, // 37: user.CallSign.ships:type_name -> user.Ship
	17, // 38: user.Ship.type:type_name -> user.ShipType
	18, // 39: user.Ship.class:type_name -> user.ShipClass
	11, // 40: user.Ship.country:type_name -> user.Country
	14, // 41: user.Ship.call_sign:type_name -> user.CallSign
	19, // 42: user.Ship.date_build:type_name -> google.protobuf.Timestamp
	19, // 43: user.Ship.created_at:type_name -> google.protobuf.Timestamp
	16, // 44: user.Ship.captains:type_name -> user.Captain
	8,  // 45: user.Ship.permissions:type_name -> user.Permission
	19, // 46: user.Captain.created_at:type_name -> google.protobuf.Timestamp
	15, // 47: user.Captain.ships:type_name -> user.Ship
	19, // 48: user.ShipType.created_at:type_name -> google.protobuf.Timestamp
	15, // 49: user.ShipType.ships:type_name -> user.Ship
	19, // 50: user.ShipClass.created_at:type_name -> google.protobuf.Timestamp
	15, // 51: user.ShipClass.ships:type_name -> user.Ship
	0,  // 52: user.UserService.GetUser:input_type -> user.UserRequest
	2,  // 53: user.UserService.ListUsers:input_type -> user.ListUsersRequest
	1,  // 54: user.UserService.GetUser:output_type -> user.UserResponse
	3,  // 55: user.UserService.ListUsers:output_type -> user.ListUsersResponse
	54, // [54:56] is the sub-list for method output_type
	52, // [52:54] is the sub-list for method input_type
	52, // [52:52] is the sub-list for extension type_name
	52, // [52:52] is the sub-list for extension extendee
	0,  // [0:52] is the sub-list for field type_name
}

func init() { file_apfish_user_proto_init() }
func file_apfish_user_proto_init() {
	if File_apfish_user_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apfish_user_proto_rawDesc), len(file_apfish_user_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apfish_user_proto_goTypes,
		DependencyIndexes: file_apfish_user_proto_depIdxs,
		MessageInfos:      file_apfish_user_proto_msgTypes,
	}.Build()
	File_apfish_user_proto = out.File
	file_apfish_user_proto_goTypes = nil
	file_apfish_user_proto_depIdxs = nil
}
