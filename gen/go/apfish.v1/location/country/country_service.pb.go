// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: apfish.v1/location/country/country_service.proto

package location_country

import (
	summary "github.com/ZhuchkovAA/protoRMRF/gen/go/apfish.v1/location/country/summary"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CountryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountryRequest) Reset() {
	*x = CountryRequest{}
	mi := &file_apfish_v1_location_country_country_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryRequest) ProtoMessage() {}

func (x *CountryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_location_country_country_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryRequest.ProtoReflect.Descriptor instead.
func (*CountryRequest) Descriptor() ([]byte, []int) {
	return file_apfish_v1_location_country_country_service_proto_rawDescGZIP(), []int{0}
}

func (x *CountryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CountryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Country       *Country               `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountryResponse) Reset() {
	*x = CountryResponse{}
	mi := &file_apfish_v1_location_country_country_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryResponse) ProtoMessage() {}

func (x *CountryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_location_country_country_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryResponse.ProtoReflect.Descriptor instead.
func (*CountryResponse) Descriptor() ([]byte, []int) {
	return file_apfish_v1_location_country_country_service_proto_rawDescGZIP(), []int{1}
}

func (x *CountryResponse) GetCountry() *Country {
	if x != nil {
		return x.Country
	}
	return nil
}

type CountrySummaryResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Country       *summary.CountrySummary `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountrySummaryResponse) Reset() {
	*x = CountrySummaryResponse{}
	mi := &file_apfish_v1_location_country_country_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountrySummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountrySummaryResponse) ProtoMessage() {}

func (x *CountrySummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_location_country_country_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountrySummaryResponse.ProtoReflect.Descriptor instead.
func (*CountrySummaryResponse) Descriptor() ([]byte, []int) {
	return file_apfish_v1_location_country_country_service_proto_rawDescGZIP(), []int{2}
}

func (x *CountrySummaryResponse) GetCountry() *summary.CountrySummary {
	if x != nil {
		return x.Country
	}
	return nil
}

type ListCountriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                      // Page number (1-based). Default: 1.
	PerPage       int64                  `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"` // Items per page (default: 20, max: 100).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCountriesRequest) Reset() {
	*x = ListCountriesRequest{}
	mi := &file_apfish_v1_location_country_country_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCountriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCountriesRequest) ProtoMessage() {}

func (x *ListCountriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_location_country_country_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCountriesRequest.ProtoReflect.Descriptor instead.
func (*ListCountriesRequest) Descriptor() ([]byte, []int) {
	return file_apfish_v1_location_country_country_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListCountriesRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCountriesRequest) GetPerPage() int64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type ListCountriesResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	ListCountries []*summary.CountrySummary `protobuf:"bytes,1,rep,name=list_countries,json=listCountries,proto3" json:"list_countries,omitempty"`
	Total         int64                     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCountriesResponse) Reset() {
	*x = ListCountriesResponse{}
	mi := &file_apfish_v1_location_country_country_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCountriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCountriesResponse) ProtoMessage() {}

func (x *ListCountriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_location_country_country_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCountriesResponse.ProtoReflect.Descriptor instead.
func (*ListCountriesResponse) Descriptor() ([]byte, []int) {
	return file_apfish_v1_location_country_country_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListCountriesResponse) GetListCountries() []*summary.CountrySummary {
	if x != nil {
		return x.ListCountries
	}
	return nil
}

func (x *ListCountriesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_apfish_v1_location_country_country_service_proto protoreflect.FileDescriptor

const file_apfish_v1_location_country_country_service_proto_rawDesc = "" +
	"\n" +
	"0apfish.v1/location/country/country_service.proto\x12\x1aapfish.v1.location.country\x1a(apfish.v1/location/country/country.proto\x1a8apfish.v1/location/country/summary/country_summary.proto\" \n" +
	"\x0eCountryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"P\n" +
	"\x0fCountryResponse\x12=\n" +
	"\acountry\x18\x01 \x01(\v2#.apfish.v1.location.country.CountryR\acountry\"f\n" +
	"\x16CountrySummaryResponse\x12L\n" +
	"\acountry\x18\x01 \x01(\v22.apfish.v1.location.country.summary.CountrySummaryR\acountry\"E\n" +
	"\x14ListCountriesRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x19\n" +
	"\bper_page\x18\x02 \x01(\x03R\aperPage\"\x88\x01\n" +
	"\x15ListCountriesResponse\x12Y\n" +
	"\x0elist_countries\x18\x01 \x03(\v22.apfish.v1.location.country.summary.CountrySummaryR\rlistCountries\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total2\xe2\x02\n" +
	"\x0eCountryService\x12e\n" +
	"\n" +
	"GetCountry\x12*.apfish.v1.location.country.CountryRequest\x1a+.apfish.v1.location.country.CountryResponse\x12s\n" +
	"\x11GetCountrySummary\x12*.apfish.v1.location.country.CountryRequest\x1a2.apfish.v1.location.country.CountrySummaryResponse\x12t\n" +
	"\rListCountries\x120.apfish.v1.location.country.ListCountriesRequest\x1a1.apfish.v1.location.country.ListCountriesResponseBTZRgithub.com/ZhuchkovAA/protoRMRF/gen/go/apfish.v1/location/country;location_countryb\x06proto3"

var (
	file_apfish_v1_location_country_country_service_proto_rawDescOnce sync.Once
	file_apfish_v1_location_country_country_service_proto_rawDescData []byte
)

func file_apfish_v1_location_country_country_service_proto_rawDescGZIP() []byte {
	file_apfish_v1_location_country_country_service_proto_rawDescOnce.Do(func() {
		file_apfish_v1_location_country_country_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apfish_v1_location_country_country_service_proto_rawDesc), len(file_apfish_v1_location_country_country_service_proto_rawDesc)))
	})
	return file_apfish_v1_location_country_country_service_proto_rawDescData
}

var file_apfish_v1_location_country_country_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_apfish_v1_location_country_country_service_proto_goTypes = []any{
	(*CountryRequest)(nil),         // 0: apfish.v1.location.country.CountryRequest
	(*CountryResponse)(nil),        // 1: apfish.v1.location.country.CountryResponse
	(*CountrySummaryResponse)(nil), // 2: apfish.v1.location.country.CountrySummaryResponse
	(*ListCountriesRequest)(nil),   // 3: apfish.v1.location.country.ListCountriesRequest
	(*ListCountriesResponse)(nil),  // 4: apfish.v1.location.country.ListCountriesResponse
	(*Country)(nil),                // 5: apfish.v1.location.country.Country
	(*summary.CountrySummary)(nil), // 6: apfish.v1.location.country.summary.CountrySummary
}
var file_apfish_v1_location_country_country_service_proto_depIdxs = []int32{
	5, // 0: apfish.v1.location.country.CountryResponse.country:type_name -> apfish.v1.location.country.Country
	6, // 1: apfish.v1.location.country.CountrySummaryResponse.country:type_name -> apfish.v1.location.country.summary.CountrySummary
	6, // 2: apfish.v1.location.country.ListCountriesResponse.list_countries:type_name -> apfish.v1.location.country.summary.CountrySummary
	0, // 3: apfish.v1.location.country.CountryService.GetCountry:input_type -> apfish.v1.location.country.CountryRequest
	0, // 4: apfish.v1.location.country.CountryService.GetCountrySummary:input_type -> apfish.v1.location.country.CountryRequest
	3, // 5: apfish.v1.location.country.CountryService.ListCountries:input_type -> apfish.v1.location.country.ListCountriesRequest
	1, // 6: apfish.v1.location.country.CountryService.GetCountry:output_type -> apfish.v1.location.country.CountryResponse
	2, // 7: apfish.v1.location.country.CountryService.GetCountrySummary:output_type -> apfish.v1.location.country.CountrySummaryResponse
	4, // 8: apfish.v1.location.country.CountryService.ListCountries:output_type -> apfish.v1.location.country.ListCountriesResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_apfish_v1_location_country_country_service_proto_init() }
func file_apfish_v1_location_country_country_service_proto_init() {
	if File_apfish_v1_location_country_country_service_proto != nil {
		return
	}
	file_apfish_v1_location_country_country_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apfish_v1_location_country_country_service_proto_rawDesc), len(file_apfish_v1_location_country_country_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apfish_v1_location_country_country_service_proto_goTypes,
		DependencyIndexes: file_apfish_v1_location_country_country_service_proto_depIdxs,
		MessageInfos:      file_apfish_v1_location_country_country_service_proto_msgTypes,
	}.Build()
	File_apfish_v1_location_country_country_service_proto = out.File
	file_apfish_v1_location_country_country_service_proto_goTypes = nil
	file_apfish_v1_location_country_country_service_proto_depIdxs = nil
}
