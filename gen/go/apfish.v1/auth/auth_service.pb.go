// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: apfish.v1/auth/auth_service.proto

package auth

import (
	summary "github.com/ZhuchkovAA/protoRMRF/gen/go/apfish.v1/permission/summary"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`       // Login of the user to register.
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // Password of the user to register.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_apfish_v1_auth_auth_service_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID of the registered user.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_apfish_v1_auth_auth_service_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`               // Login of the user to login.
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`         // Password of the user to login.
	AppId         int32                  `protobuf:"varint,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"` // ID of the app to login to.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_apfish_v1_auth_auth_service_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginRequest) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`    // Auth token of the logged in user.
	RefreshToken  string                 `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // Refresh token of the logged in user.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_apfish_v1_auth_auth_service_proto_rawDescGZIP(), []int{3}
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type RefreshRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefreshToken  string                 `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshRequest) Reset() {
	*x = RefreshRequest{}
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRequest) ProtoMessage() {}

func (x *RefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRequest.ProtoReflect.Descriptor instead.
func (*RefreshRequest) Descriptor() ([]byte, []int) {
	return file_apfish_v1_auth_auth_service_proto_rawDescGZIP(), []int{4}
}

func (x *RefreshRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type RefreshResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshResponse) Reset() {
	*x = RefreshResponse{}
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshResponse) ProtoMessage() {}

func (x *RefreshResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshResponse.ProtoReflect.Descriptor instead.
func (*RefreshResponse) Descriptor() ([]byte, []int) {
	return file_apfish_v1_auth_auth_service_proto_rawDescGZIP(), []int{5}
}

func (x *RefreshResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type JwtData struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Id            int32                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RoleId        int32                    `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Permissions   []*summary.PermissionJwt `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Exp           int64                    `protobuf:"varint,4,opt,name=exp,proto3" json:"exp,omitempty"`
	Iat           int64                    `protobuf:"varint,5,opt,name=iat,proto3" json:"iat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JwtData) Reset() {
	*x = JwtData{}
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JwtData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtData) ProtoMessage() {}

func (x *JwtData) ProtoReflect() protoreflect.Message {
	mi := &file_apfish_v1_auth_auth_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtData.ProtoReflect.Descriptor instead.
func (*JwtData) Descriptor() ([]byte, []int) {
	return file_apfish_v1_auth_auth_service_proto_rawDescGZIP(), []int{6}
}

func (x *JwtData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JwtData) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *JwtData) GetPermissions() []*summary.PermissionJwt {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *JwtData) GetExp() int64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *JwtData) GetIat() int64 {
	if x != nil {
		return x.Iat
	}
	return 0
}

var File_apfish_v1_auth_auth_service_proto protoreflect.FileDescriptor

const file_apfish_v1_auth_auth_service_proto_rawDesc = "" +
	"\n" +
	"!apfish.v1/auth/auth_service.proto\x12\x0eapfish.v1.auth\x1a5apfish.v1/permission/summary/permission_summary.proto\"C\n" +
	"\x0fRegisterRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"+\n" +
	"\x10RegisterResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\"W\n" +
	"\fLoginRequest\x12\x14\n" +
	"\x05login\x18\x01 \x01(\tR\x05login\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x15\n" +
	"\x06app_id\x18\x03 \x01(\x05R\x05appId\"W\n" +
	"\rLoginResponse\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12#\n" +
	"\rrefresh_token\x18\x02 \x01(\tR\frefreshToken\"5\n" +
	"\x0eRefreshRequest\x12#\n" +
	"\rrefresh_token\x18\x01 \x01(\tR\frefreshToken\"4\n" +
	"\x0fRefreshResponse\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\"\xa5\x01\n" +
	"\aJwtData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x17\n" +
	"\arole_id\x18\x02 \x01(\x05R\x06roleId\x12M\n" +
	"\vpermissions\x18\x03 \x03(\v2+.apfish.v1.permission.summary.PermissionJwtR\vpermissions\x12\x10\n" +
	"\x03exp\x18\x04 \x01(\x03R\x03exp\x12\x10\n" +
	"\x03iat\x18\x05 \x01(\x03R\x03iat2\xee\x01\n" +
	"\vAuthService\x12M\n" +
	"\bRegister\x12\x1f.apfish.v1.auth.RegisterRequest\x1a .apfish.v1.auth.RegisterResponse\x12D\n" +
	"\x05Login\x12\x1c.apfish.v1.auth.LoginRequest\x1a\x1d.apfish.v1.auth.LoginResponse\x12J\n" +
	"\aRefresh\x12\x1e.apfish.v1.auth.RefreshRequest\x1a\x1f.apfish.v1.auth.RefreshResponseB<Z:github.com/ZhuchkovAA/protoRMRF/gen/go/apfish.v1/auth;authb\x06proto3"

var (
	file_apfish_v1_auth_auth_service_proto_rawDescOnce sync.Once
	file_apfish_v1_auth_auth_service_proto_rawDescData []byte
)

func file_apfish_v1_auth_auth_service_proto_rawDescGZIP() []byte {
	file_apfish_v1_auth_auth_service_proto_rawDescOnce.Do(func() {
		file_apfish_v1_auth_auth_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apfish_v1_auth_auth_service_proto_rawDesc), len(file_apfish_v1_auth_auth_service_proto_rawDesc)))
	})
	return file_apfish_v1_auth_auth_service_proto_rawDescData
}

var file_apfish_v1_auth_auth_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_apfish_v1_auth_auth_service_proto_goTypes = []any{
	(*RegisterRequest)(nil),       // 0: apfish.v1.auth.RegisterRequest
	(*RegisterResponse)(nil),      // 1: apfish.v1.auth.RegisterResponse
	(*LoginRequest)(nil),          // 2: apfish.v1.auth.LoginRequest
	(*LoginResponse)(nil),         // 3: apfish.v1.auth.LoginResponse
	(*RefreshRequest)(nil),        // 4: apfish.v1.auth.RefreshRequest
	(*RefreshResponse)(nil),       // 5: apfish.v1.auth.RefreshResponse
	(*JwtData)(nil),               // 6: apfish.v1.auth.JwtData
	(*summary.PermissionJwt)(nil), // 7: apfish.v1.permission.summary.PermissionJwt
}
var file_apfish_v1_auth_auth_service_proto_depIdxs = []int32{
	7, // 0: apfish.v1.auth.JwtData.permissions:type_name -> apfish.v1.permission.summary.PermissionJwt
	0, // 1: apfish.v1.auth.AuthService.Register:input_type -> apfish.v1.auth.RegisterRequest
	2, // 2: apfish.v1.auth.AuthService.Login:input_type -> apfish.v1.auth.LoginRequest
	4, // 3: apfish.v1.auth.AuthService.Refresh:input_type -> apfish.v1.auth.RefreshRequest
	1, // 4: apfish.v1.auth.AuthService.Register:output_type -> apfish.v1.auth.RegisterResponse
	3, // 5: apfish.v1.auth.AuthService.Login:output_type -> apfish.v1.auth.LoginResponse
	5, // 6: apfish.v1.auth.AuthService.Refresh:output_type -> apfish.v1.auth.RefreshResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_apfish_v1_auth_auth_service_proto_init() }
func file_apfish_v1_auth_auth_service_proto_init() {
	if File_apfish_v1_auth_auth_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apfish_v1_auth_auth_service_proto_rawDesc), len(file_apfish_v1_auth_auth_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apfish_v1_auth_auth_service_proto_goTypes,
		DependencyIndexes: file_apfish_v1_auth_auth_service_proto_depIdxs,
		MessageInfos:      file_apfish_v1_auth_auth_service_proto_msgTypes,
	}.Build()
	File_apfish_v1_auth_auth_service_proto = out.File
	file_apfish_v1_auth_auth_service_proto_goTypes = nil
	file_apfish_v1_auth_auth_service_proto_depIdxs = nil
}
